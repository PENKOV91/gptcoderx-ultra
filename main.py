from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
from fastapi.responses import FileResponse
import os

# –í–Ω–æ—Å –Ω–∞ –≤—Å–∏—á–∫–∏ routers
from deepseek_api import router as deepseek_router
from github_search import router as github_router
from webpilot_search import router as webpilot_router
from merge import router as merge_router

app = FastAPI(
    title="GPT-CODER X ULTRA",
    description="–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω GPT –∞–≥–µ–Ω—Ç –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ MQL4/MQL5/Python –∫–æ–¥ —á—Ä–µ–∑ DeepSeek, GitHub, WebPilot –∏ Reasoner.",
    version="1.0.0"
)

# CORS - –∑–∞ –¥–∞ –º–æ–∂–µ –¥–∞ —Å–µ –≤–∏–∫–∞ –æ—Ç–≤—ä–Ω
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –ú–æ–∂–µ –¥–∞ –æ–≥—Ä–∞–Ω–∏—á–∏—à –∫—ä–º –∫–æ–Ω–∫—Ä–µ—Ç–µ–Ω –¥–æ–º–µ–π–Ω
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –í–∫–ª—é—á–≤–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ routers
app.include_router(deepseek_router, prefix="/code")
app.include_router(github_router, prefix="/search")
app.include_router(webpilot_router, prefix="/search")
app.include_router(merge_router, prefix="/merge")

# Root endpoint (–∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞)
@app.get("/")
def root():
    return {"message": "üöÄ GPT-CODER X ULTRA Backend is running!"}

# ‚úÖ –°—ä—Ä–≤–∏—Ä–∞–Ω–µ –Ω–∞ —Å—Ç–∞—Ç–∏—á–Ω–∏ JSON —Ñ–∞–π–ª–æ–≤–µ –æ—Ç .well-known
if not os.path.exists(".well-known"):
    os.makedirs(".well-known")

app.mount("/.well-known", StaticFiles(directory=".well-known"), name="wellknown")

# ‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª–Ω–æ —Ä—ä—á–Ω–æ —Å–µ—Ä–≤–∏—Ä–∞–Ω–µ –Ω–∞ openapi.json –æ—Ç .well-known
@app.get("/openapi.json", include_in_schema=False)
def custom_openapi():
    return FileResponse(".well-known/openapi.json", media_type="application/json")
