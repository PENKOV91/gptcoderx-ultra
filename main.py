from fastapi import FastAPI, Request
from deepseek_api import generate_code, generate_reasoning
from github_search import search_github_repos
from webpilot_search import search_webpilot
from merge import merge_results

app = FastAPI(
    title="GPT-CODER X ULTRA",
    description="""
    –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω GPT –∞–≥–µ–Ω—Ç –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ MQL4/MQL5/Python –∫–æ–¥ —á—Ä–µ–∑ DeepSeek-Coder-V2 –∏ Reasoner.
    –ü–æ–¥–¥—ä—Ä–∂–∞ –∏–∑–≤–ª–∏—á–∞–Ω–µ –æ—Ç GitHub, WebPilot –∏ MQL5, –∫–∞–∫—Ç–æ –∏ reasoning –æ—Ç DeepSeek R1.
    """,
    version="1.0.0"
)

@app.get("/")
def root():
    return {"message": "üî• GPT-CODER X ULTRA backend is live!"}

@app.post("/code/deepseek")
def code_with_deepseek(data: dict):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–¥ —Å DeepSeek-Coder-V2
    """
    prompt = data.get("prompt", "")
    return generate_code(prompt)

@app.post("/code/reasoner")
def code_with_reasoner(data: dict):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –ª–æ–≥–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑ —á—Ä–µ–∑ DeepSeek Reasoner
    """
    prompt = data.get("prompt", "")
    return generate_reasoning(prompt)

@app.post("/search/github")
def github_search(data: dict):
    """
    –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –∫–æ–¥/—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –æ—Ç GitHub
    """
    query = data.get("query", "")
    return search_github_repos(query)

@app.post("/search/webpilot")
def webpilot_search_endpoint(data: dict):
    """
    Web scraping —á—Ä–µ–∑ WebPilot
    """
    link = data.get("link", "")
    query = data.get("query", "")
    return search_webpilot(link, query)

@app.post("/merge/results")
def merge_all(data: dict):
    """
    –û–±–µ–¥–∏–Ω—è–≤–∞–Ω–µ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏ –æ—Ç GitHub, WebPilot, MQL5
    """
    github_results = data.get("github_results", [])
    webpilot_results = data.get("webpilot_results", {})
    mql5_results = data.get("mql5_results", [])
    return merge_results(github_results, webpilot_results, mql5_results)
