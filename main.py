import os
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
from fastapi.responses import FileResponse

# –í–Ω–æ—Å –Ω–∞ –≤—Å–∏—á–∫–∏ routers
from deepseek_api import router as deepseek_router
from github_search import router as github_router
from webpilot_search import router as webpilot_router
from merge import router as merge_router

# ‚ùå –ò–∑–∫–ª—é—á–≤–∞–º–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏—è OpenAPI –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –Ω–∞ FastAPI
app = FastAPI(
    title="GPT-CODER X ULTRA",
    description="–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω GPT –∞–≥–µ–Ω—Ç –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ MQL4/MQL5/Python –∫–æ–¥ —á—Ä–µ–∑ DeepSeek, GitHub, WebPilot –∏ Reasoner.",
    version="1.0.0",
    docs_url=None,
    redoc_url=None,
    openapi_url=None  # <- –≤–∞–∂–Ω–æ –∑–∞ ChatGPT Plugin
)

# ‚úÖ CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–ø–æ–∑–≤–æ–ª—è–≤–∞–º–µ –≤—Å–∏—á–∫–∏ –∏–∑—Ç–æ—á–Ω–∏—Ü–∏)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –≤—Å–∏—á–∫–∏ routers
app.include_router(deepseek_router, prefix="/code")
app.include_router(github_router, prefix="/search")
app.include_router(webpilot_router, prefix="/search")
app.include_router(merge_router, prefix="/merge")

# ‚úÖ Root endpoint –∑–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ
@app.get("/")
def root():
    return {"message": "üöÄ GPT-CODER X ULTRA Backend is running!"}

# ‚úÖ .well-known –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∑–∞ ChatGPT Plugin —Ñ–∞–π–ª–æ–≤–µ—Ç–µ
if not os.path.exists(".well-known"):
    os.makedirs(".well-known")

app.mount("/.well-known", StaticFiles(directory=".well-known"), name="wellknown")

# ‚úÖ –†—ä—á–Ω–æ –ø–æ–¥–∞–≤–∞–Ω–µ –Ω–∞ openapi.json (—Å –≤–≥—Ä–∞–¥–µ–Ω–æ servers –ø–æ–ª–µ)
@app.get("/openapi.json", include_in_schema=False)
def custom_openapi():
    return FileResponse(".well-known/openapi.json", media_type="application/json")
